version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  nginx_tls: {}
  audit: {}

services:
  postgres:
    build: ./docker/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    environment:
      - POSTGRES_USER=tinyauth
      - POSTGRES_PASSWORD=tinyauth
      - POSTGRES_DB=tinyauth

  flask:
    build:
      context: .
      dockerfile: ./docker/flask/Dockerfile-dev
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=tinyauth
      - POSTGRES_PASSWORD=tinyauth
      - AUDIT_LOG_FILENAME=/app/var/audit/audit.log
    volumes:
      - audit:/app/var/audit
      - .:/app/src
    ports:
      - "8000:8000"

  ui:
    build:
      context: .
      dockerfile: ./docker/ui/Dockerfile-dev
    volumes:
      - ./admin/src:/src/src
      - ./admin/public:/src/public

  login-ui:
    build:
      context: .
      dockerfile: ./docker/login-ui/Dockerfile-dev
    volumes:
      - ./login-ui/src:/src/src
      - ./login-ui/public:/src/public

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile-dev
    volumes:
      - nginx_tls:/etc/nginx/external/
    ports:
      - "0.0.0.0:443:443"
    depends_on:
      - flask

  proxy:
    build:
      context: .
      dockerfile: ./docker/flask/Dockerfile-dev
    environment:
      - TINYAUTH_AUTH_MODE=proxy
      - TINYAUTH_ENDPOINT=https://nginx
      - TINYAUTH_ACCESS_KEY_ID=gatekeeper
      - TINYAUTH_SECRET_ACCESS_KEY=keymaster
      - TINYAUTH_VERIFY=False
      - AUDIT_LOG_FILENAME=/app/var/audit/audit.log
    volumes:
      - audit:/app/var/audit
      - .:/app/src
    ports:
      - "8001:8000"
